{\rtf1\ansi\ansicpg1252\cocoartf1348\cocoasubrtf170
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0  -- Get-Help\
If you want to know how the Get-Process command works, you can type:\
Get-Help -Name Get-Process\
and Windows will display the full command syntax.\
To find out all the commands you can use with the Get verb, type:\
Get-Help -Name Get-*\
\
 -- Set-ExecutionPolicy\
Microsoft has disabled scripting by default.  Four levels of security are available to you:\
    Restricted \'97 Restricted is the default execution policy and locks PowerShell down so that commands can be entered only interactively. PowerShell scripts are not allowed to run.\
    All Signed \'97 If the execution policy is set to All Signed then scripts will be allowed to run, but only if they are signed by a trusted publisher.\
    Remote Signed \'97 If the execution policy is set to Remote Signed, any PowerShell scripts that have been locally created will be allowed to run. Scripts created remotely are allowed to run only if they are signed by a trusted publisher.\
    Unrestricted \'97 As the name implies, Unrestricted removes all restrictions from the execution policy.\
Set-ExecutionPolicy Unrestricted\
\
 -- Get-ExecutionPolicy\
See what execution policy is in use before you attempt to run a script.\
\
 -- Get-Service\
The Get-Service command provides a list of all of the services that are installed on the system. If you are interested in a specific service you can append the -Name switch and the name of the service (wildcards are permitted)\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0  -- ConvertTo-HTML\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 To create a report pipe the output from another command into ConvertTo-HTML.  Use the -Property switch to control which output properties are included in the HTML file and you will have to provide a filename.\
List each service along with its status (regardless of whether the service is running) like this:\
Get-Service | ConvertTo-HTML -Property Name, Status > C:\\services.htm\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0  -- Export-CSV\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 At a minimum, you must provide an output filename. For example, to export the list of system services to a CSV file, you could use the following command:\
Get-Service | Export-CSV c:\\service.csv\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0  -- Select-Object\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 Select-Object command allows you to specify specific properties for inclusion. To create a CSV file containing the name of each system service and its status, you could use the following command:\
Get-Service | Select-Object Name, Status | Export-CSV c:\\service.csv\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0  -- Get-EventLog\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 Parse your computer's event logs. To see the Application log, you could use the following command:\
Get-EventLog -Log "Application"\
Pipe to other commands to filter the output and dump it to a CSV or an HTML file.\
\
 -- Get-Process\
List of all of the processes that are currently running on the system.\
 -- Stop-Process\
Terminate the process by using the Stop-Process command. You can terminate a process based on its name or on its process ID. \
Stop-Process -Name notepad\
Stop-Process -ID 2668\
\
\
Quick reference\
Bash/Linux 	PowerShell\
ls 		ls\
mv	 	mv\
cp 		cp\
pwd 		pwd\
rm 		rm\
cat 		cat\
grep 		search-string\
echo 		echo\
var=0 		$var=0\
df 		gdr or Get-PSdrive\
wc 		measure-object\
ps 		ps\
find 		gci\
diff 		diff\
kill 		kill\
time 		measure-command\
if [condition] then something fi 	if (condition) \{ something \}\
-e file 		Test-Path file\
for ((i=0; i < 10; i++)) ; do echo $i ; done		for ($i=0;$i -lt 10; $i++) \{ echo $i \}\
}